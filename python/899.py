



0,1,0,1,0,1,0
1,1,0,1,1,1,0
0,0,0,1,1,1,0
1,1,1,1,1,1,0
0,1,1,1,1,1,0
1,1,1,1,1,1,0
0,0,0,0,0,0,0
1,1,1,1,1,1,1,1
0,1,1,1,1,1,1,1,1
1,1,1,1,1,1,1,1,1,1
0,0,0,1,1,1,1,1,1,1,1
1,1,1,1,1,1,1,1,1,1,1,1
0,1,1,1,1,1,1,1,1,1,1,1,1
1,1,1,1,1,1,1,1,1,1,1,1,1,1
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
0.0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0



1 - 0
3 - 1
7 - 2

def test(n):
    i = 0
    p = 1
    while p <= n:
        p *= 2
        p += 1
        i += 1
    return i - 1



1,5,13,29,61
0,1, 5,17


1,6,19,48,109
0,1,6,23
0,2,12,46

1,2,3,4,5
2,4,8,16,32
1,3,7,15,31
1,5,13,




33 - 1
35 - 3
37 - 1
39 - 7
41 - 1
43 - 3
45 - 1
47 - 15
49 - 1

66

1,3,1,7,1,3,1,15,1,3,1,7,1,3,
4,8,4,16,4,8,4,
1,2,1,4,1,2,1,8,1,2,1,4,1,2,1
1,3,4,8,9,11,12,20,

1,4,5,12,13,16,17,32,33,36,37,44,45,


1,11
2,11




0,1,0,3,0,1,0

0,1,


1,3,1,7,1,3,1,15,1,3,1,7,1,3,1,31
1,3,1,7,1,3,1,15

1 - 1
2 - 4
4 - 12
8 - 32
16 - 80
32 - 192




def solve899(n):
    n = (n+1) // 2
    s = 1
    i = 0
    p = 1
    tot = 0
    while n > 0:
        if n%2 == 1:
            tot += s
        p *= 2
        s *= 2
        s += p
        i += 1
        n >>= 1
    return 2*tot - i



4,4,4,4,4 - 16
1,3,4,4,4 - 16 - 4 - 5
1, 12


3,3,3,4

3,9


5,5,5,5,5,5

1,3,1,7,1,3,1,15
1,2,3,4,5,6,7,8


def score(start, n):
    start = (start + 1) // 2
    p2 = 0
    x = 1
    while x <= n:
        p2 += 1
        x *= 2
    # print(p2)
    out = x - (start % x)
    return out * 2
    

def s(n):
    i = 1
    out = 0
    while i <= n:
        out += score(i*i, i)
        i += 1
    print(out)





2,2,8,2,2,8,2,2,26,2,2,8,2,2,8,2,2,26,2,2,8,2,2,8,2,2,80,
2,4,12,

# 0
# 2 = 0 + (3 - 1)
# 12 = 6 + (9-3)
# 54 = 36 + (27-9)
# 216 = 162 + (81-27)
# 810 = 648 + (243-81)

def test(n):
    s = 0
    p = 1
    for _ in range(n):
        s = s*3 + 3**p - 3**(p-1)
        p += 1
        print(s)


# t0
4,4,4,4,4
n = 4
piles = n+1
low = 4
sum = n**2 + n
rem = sum - low - n + 1 # = 13

(4, 4, 20, 13)

(4, 3, 16, 10)
(4, 2, 16, 11)
(4, 1, 16, 12)

# t1
1,3,4,4,4 - 0
2,2,4,4,4
3,3,3,4,4

# t2
1,1,4,4,4
1,2,3,4,4
2,2,2,4,4
2,2,3,3,4



2,2,4,4,4

1,1,4,4,4 - 1,7
1,2,3,3,3

2,2,2,4,4
2,2,




# 0,1,0,1,0,1,0
# 1,1,0,1,1,1,0
# 0,0,0,1,1,1,0
# 1,1,1,1,1,1,0
# 0,1,1,1,1,1,0
# 1,1,1,1,1,1,0
# 0,0,0,0,0,0,0
arr = [
[
[0,1,0,1,0,1,0],
[1,0,1,0,1,0,1],
[0,1,0,1,0,1,0],
[1,0,1,0,1,0,1],
[0,1,0,1,0,1,0],
[1,0,1,0,1,0,1],
[0,1,0,1,0,1,0],
],

[
[1,0,1,0,1,0,1],
[0,0,1,1,1,0,1],
[1,1,1,1,0,1,1],
[0,1,1,0,1,1,1],
[1,1,0,1,1,1,0],
[0,0,1,1,1,0,1],
[1,1,1,1,0,1,1],
],

[
[0,1,0,1,0,1,0],
[1,1,1,1,0,1,1],
[0,1,1,1,0,1,1],
[1,1,1,0,1,1,1],
[0,0,0,1,1,1,0],
[1,1,1,1,1,0,1],
[0,1,1,1,0,1,1],
],

[
[1,0,1,0,1,0,1],
[0,1,1,0,1,1,1],
[1,1,1,0,1,1,1],
[0,0,0,0,1,1,1],
[1,1,1,1,1,1,1],
[0,1,1,1,1,1,1],
[1,1,1,1,1,1,1],
],

[
[0,1,0,1,0,1,0],
[1,1,0,1,1,1,0],
[0,0,0,1,1,1,0],
[1,1,1,1,1,1,1],
[0,1,1,1,1,1,1],
[1,1,1,1,1,1,1],
[0,0,0,1,1,1,1],
],

[
[1,0,1,0,1,0,1],
[0,0,1,1,1,0,1],
[1,1,1,1,1,0,1],
[0,1,1,1,1,1,1],
[1,1,1,1,1,1,1],
[0,0,0,1,1,1,1],
[1,1,1,1,1,1,1],
],

[
[0,1,0,1,0,1,0],
[1,1,1,1,0,1,1],
[0,1,1,1,0,1,1],
[1,1,1,1,1,1,1],
[0,0,0,1,1,1,1],
[1,1,1,1,1,1,1],
[0,1,1,1,1,1,1],
]
]


def invert(arr):
    for x in range(len(arr)):
        for y in range(len(arr[0])):
            for z in range(len(arr[0][0])):
                arr[x][y][z] ^= 1



def empty(n):
    return [[[0 for _ in range(n)] for _ in range(n)] for _ in range(n)]


arr2 = empty(6)

for i in range(1, 7):
    for j in range(1, 7):
        for k in range(1, 7):
            arr2[i-1][j-1][k-1] = arr[i][j][k]


arr3 = empty(4)
for i in range(1, 5):
    for j in range(1, 5):
        for k in range(1, 5):
            arr3[i-1][j-1][k-1] = arr[i][j][k]

# invert(arr2)

def trim(arr):
    seen = set()
    for x in range(len(arr)):
        for y in range(len(arr[0])):
            for z in range(len(arr[0][0])):
                # tup = tuple(sorted({x,y,z}))
                # if tup in seen:
                if y < x or z < y:
                    arr[x][y][z] = 0
                # seen.add(tup)

                


arr4 = empty(4)
invert(arr4)



0, 1, 1, 1, 0, 1
1, 1, 1, 0, 1, 1
1, 1, 0, 1, 1, 1
1, 0, 1, 1, 1, 0
0, 1, 1, 1, 0, 1
1, 1, 1, 0, 1, 1

1, 1, 1, 0, 1, 1
1, 1, 1, 0, 1, 1
1, 1, 0, 1, 1, 1
0, 0, 1, 1, 1, 0
1, 1, 1, 1, 0, 1
1, 1, 1, 0, 1, 1

1, 1, 0, 1, 1, 1
1, 1, 0, 1, 1, 1
0, 0, 0, 1, 1, 1
1, 1, 1, 1, 1, 1
1, 1, 1, 1, 1, 1
1, 1, 1, 1, 1, 1

1, 0, 1, 1, 1, 0
0, 0, 1, 1, 1, 0
1, 1, 1, 1, 1, 1
1, 1, 1, 1, 1, 1
1, 1, 1, 1, 1, 1
0, 0, 1, 1, 1, 1

0, 1, 1, 1, 0, 1
1, 1, 1, 1, 0, 1
1, 1, 1, 1, 1, 1
1, 1, 1, 1, 1, 1
0, 0, 1, 1, 1, 1
1, 1, 1, 1, 1, 1

1, 1, 1, 0, 1, 1
1, 1, 1, 0, 1, 1
1, 1, 1, 1, 1, 1
0, 0, 1, 1, 1, 1
1, 1, 1, 1, 1, 1
1, 1, 1, 1, 1, 1



2,3,4 9-7
1,2,4



1 - even - L
1 - odd - W

2 - odd W



2,2,2 - L  2 - 0
2,2,4 - W  2 - 2
2,2,6 - L  2 - 4


3 even - 2 even or 1 odd


4,4,4,4,4 (4,20)
1,3,4,4,4
2,2,4,4,4
3,3,3,3,4

3,3,3
2,2,2
1,2,3

4,4,7 even odd
4,4,3 odd even

4,4,5
3,3,3 

4,4,4,4,4
2,2,4,4,4 - 6
2,2,2,4,4 - 4
2,2,2,2,4 - 2
2,2,2,2,2 - 0
1,1,2,2,2  - L
1,1,1,2,2
1,1,1,1,2
1,1,1,1,1


4,4,4,4,4 - 0
3,3,3,3,4 - 6
1,2,3,3,4
1,1,3,3,4
1,1,2,3,4
1,1,1,2,4
1,1,1,1,4
1,1,1,1,3

6,6,6,6,6,6,6 - 6,0
4,4,4,6,6,6,6 - 4,8

2,4,6,6,6,6,6 - 2,22
1,3,6,6,6,6,6 - 1,27
1,1,1,1,1,1,28

8,8,8,8,8,8,8,8,8
6,6,6,6,8,8,8,8,8

8, 0
6, 







3,3,3 0
2,2,2 0

odd odd - win
even odd - win
odd even - must drop to e/e
even even - drop to even even or reduce

3,3,5 - 2
1,2,5 - 5
2,2,4 - 2

3,3,7 - 4
3,3,4


3,3,7
2,2,6 


[
[0,1,1,1,0,1],
[1,1,1,0,1,1],
[1,1,0,1,1,1],
[1,0,1,1,1,0],
[0,1,1,1,0,1],
[1,1,1,0,1,1],
],


[
[1,1,0,1,1],
[1,0,1,1,1],
[0,1,1,1,0],
[1,1,1,0,1],
[1,1,0,1,1],
],


[
[0,1,1,1],
[1,1,1,1],
[1,1,1,1],
[1,1,1,1],
],

[
[1,1,1],
[1,1,1],
[1,1,1],
],

[
[1,1],
[1,1],
],

[
[0,1,0,1,0,1,0],
[1,1,1,1,0,1,1],
[0,1,1,1,0,1,1],
[1,1,1,1,1,1,1],
[0,0,0,1,1,1,1],
[1,1,1,1,1,1,1],
[0,1,1,1,1,1,1],
]
]
